set -g mouse on

set -g mode-keys vi
set -g status-keys vi

set -g base-index 1
set -g pane-base-index 1

bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind w choose-tree -wZ -O index
bind s choose-tree -sZ -O index
bind e choose-tree -Z -O index
bind j joinp -h -s . -t -1. # move current pane to window to the left

# Like break pane to new window (C-b !), but breaks window with all its panes to a new session
bind-key m command-prompt -p "New session name:" 'run-shell "\
    if tmux has-session -t %1 2>/dev/null; then
        tmux switch-client -t %1 \;
        tmux move-window -s #{session_name}:#{window_index} -t %1;
    else
        if (( $(tmux list-windows -F \"#{session_windows}\" | head -n 1) <= 1 )); then
            tmux rename-session %1;
        else
            tmux new-session -d -s %1 \;
            tmux move-window -s #{session_name}:#{window_index} -t %1:2 \;
            tmux switch-client -t "$session_name":1 \;
            tmux kill-window \;
            tmux move-window -t 1;
        fi
    fi
    "
'

set -g display-time 2000
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-right-length 80
set -g status-left-length 80
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=-40:pane_title}\" | git:(#(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD 2>/dev/null || echo ''))"
set -g pane-border-style fg=colour240
set -g pane-active-border-style fg=colour1
